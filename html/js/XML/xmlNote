XML 指可扩展标记语言（EXtensible Markup Language）。

XML 被设计用来传输和存储数据，其焦点是数据的内容。
HTML 被设计用来显示数据，其焦点是数据的外观。

XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。

XML 标签没有被预定义。您需要自行定义标签。
XML 被设计为具有自我描述性。
XML 是 W3C 的推荐标准。

XML 是独立于软件和硬件的信息传输工具。

XML 的优势之一，就是可以在不中断应用程序的情况下进行扩展。

XML 属性
属性提供有关元素的额外信息
<file type="gif">computer.gif</file>

属性必须加引号
<person sex="female">
<gangster name='George "Shotgun" Ziegler'>

避免 XML 属性？
属性不能包含多个值（元素可以）
属性不能包含树结构（元素可以）
属性不容易扩展（为未来的变化）

有时候会向元素分配 ID 引用。这些 ID 索引可用于标识 XML 元素，它起作用的方式与 HTML 中 id 属性是一样的。
<messages>
<note id="501">
<to>Tove</to>
<from>Jani</from>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
</note>
<note id="502">
<to>Jani</to>
<from>Tove</from>
<heading>Re: Reminder</heading>
<body>I will not</body>
</note>
</messages>

元数据（有关数据的数据）应当存储为属性，而数据本身应当存储为元素。

使用 CSS 显示 XML
<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/css" href="cd_catalog.css"?>
<CATALOG>
<CD>
<TITLE>Empire Burlesque</TITLE>
<ARTIST>Bob Dylan</ARTIST>
<COUNTRY>USA</COUNTRY>
<COMPANY>Columbia</COMPANY>
<PRICE>10.90</PRICE>
<YEAR>1985</YEAR>
</CD>
<CD>
<TITLE>Hide your heart</TITLE>
<ARTIST>Bonnie Tyler</ARTIST>
<COUNTRY>UK</COUNTRY>
<COMPANY>CBS Records</COMPANY>
<PRICE>9.90</PRICE>
<YEAR>1988</YEAR>
</CD>
.
.
.
</CATALOG>

----------------------------------

下面的实例检索第一个 <title> 元素的文本值
txt=xmlDoc.getElementsByTagName("title")[0].childNodes[0].nodeValue;

下面的实例检索第一个 <title> 元素的 "lang" 属性的文本值
txt=xmlDoc.getElementsByTagName("title")[0].getAttribute("lang");